/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import estructuras.Hashtable;
import estructuras.ArbolBB;
import estructuras.NodoArbol;
import estructuras.ListaSimple;
import estructuras.NodoSimple;
import estructuras.ProcesadorArchivo;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.io.File;

/**
 * Ventana principal del sistema de análisis y visualización de secuencias de ADN.
 * Permite al usuario cargar archivos, consultar patrones, ver reportes y reiniciar el sistema.
 * Se conecta con las clases de lógica (tabla hash, árbol AVL, lista) y muestra los resultados en la interfaz gráfica.
 *
 * @author Linares, Peña, Lovera
 */
public class Interfaz1 extends javax.swing.JFrame {
    private ProcesadorArchivo procesador;
    private Hashtable tabla;
    private ArbolBB arbol;
    private boolean datosCargados;

    /*
     * Creates new form Interfaz1
     */
    public Interfaz1() {
        initComponents();
        procesador = new ProcesadorArchivo();
        tabla = new Hashtable();
        arbol = new ArbolBB();
        datosCargados=false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new gui.FondoInterfaz();
        cargarArchivo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnBuscarPatrones = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        verPatronMenosFrecuente = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        reiniciar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        verInfoPatron = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        verListaPatrones = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        verPatronMasFrecuente = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        cargarComboPatrones = new javax.swing.JComboBox<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        verReporteAminoacidos = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        verReporteColision = new javax.swing.JTextArea();
        mostrarPatrones = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel12 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cargarArchivo.setBackground(new java.awt.Color(255, 204, 153));
        cargarArchivo.setFont(new java.awt.Font("Avenir Next", 1, 13)); // NOI18N
        cargarArchivo.setText("Cargar archivo");
        cargarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarArchivoActionPerformed(evt);
            }
        });
        jPanel1.add(cargarArchivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 60, 180, -1));

        jLabel1.setFont(new java.awt.Font("Avenir Next", 1, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Sistema de Identificación y Análisis de Secuencias");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 1070, -1));

        jLabel2.setFont(new java.awt.Font("Avenir", 0, 14)); // NOI18N
        jLabel2.setText("Presione el botón para cargar el archivo con la información relativa a la secuencia de ADN");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, -1, -1));

        btnBuscarPatrones.setBackground(new java.awt.Color(255, 204, 153));
        btnBuscarPatrones.setFont(new java.awt.Font("Avenir Next", 1, 13)); // NOI18N
        btnBuscarPatrones.setText("Buscar");
        btnBuscarPatrones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPatronesActionPerformed(evt);
            }
        });
        jPanel1.add(btnBuscarPatrones, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 770, 150, -1));

        jSeparator2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 51, 0), 2));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 1070, 50));

        verPatronMenosFrecuente.setBackground(new java.awt.Color(255, 224, 193));
        verPatronMenosFrecuente.setColumns(20);
        verPatronMenosFrecuente.setRows(5);
        jScrollPane2.setViewportView(verPatronMenosFrecuente);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 370, 470, 100));

        jLabel4.setFont(new java.awt.Font("Avenir", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Reinicie el programa presionando el botón");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 700, 300, 30));

        jLabel5.setFont(new java.awt.Font("Avenir Next Condensed", 1, 15)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Patrón menos frecuente");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 350, 470, 17));

        reiniciar.setBackground(new java.awt.Color(255, 204, 153));
        reiniciar.setFont(new java.awt.Font("Avenir Next", 1, 13)); // NOI18N
        reiniciar.setText("Reiniciar");
        reiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reiniciarActionPerformed(evt);
            }
        });
        jPanel1.add(reiniciar, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 750, 140, -1));

        jLabel6.setFont(new java.awt.Font("Avenir Next Condensed", 1, 15)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Lista de patrones encontrados en la secuencia ");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, 1000, 17));

        jLabel8.setFont(new java.awt.Font("Avenir Next Condensed", 1, 15)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Reporte de aminoácidos");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 490, 470, 20));

        jLabel7.setFont(new java.awt.Font("Avenir Next Condensed", 1, 15)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Reporte de colisiones");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 500, 470, 17));

        verInfoPatron.setBackground(new java.awt.Color(255, 224, 193));
        verInfoPatron.setColumns(20);
        verInfoPatron.setRows(5);
        jScrollPane3.setViewportView(verInfoPatron);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 720, 470, 80));

        verListaPatrones.setBackground(new java.awt.Color(255, 224, 193));
        verListaPatrones.setColumns(20);
        verListaPatrones.setRows(5);
        jScrollPane4.setViewportView(verListaPatrones);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, 1000, 110));

        verPatronMasFrecuente.setBackground(new java.awt.Color(255, 224, 193));
        verPatronMasFrecuente.setColumns(20);
        verPatronMasFrecuente.setRows(5);
        jScrollPane5.setViewportView(verPatronMasFrecuente);

        jPanel1.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 370, 470, 100));

        jLabel9.setFont(new java.awt.Font("Avenir Next Condensed", 3, 16)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("Búsqueda general de patrones");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 260, 17));

        cargarComboPatrones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cargarComboPatrones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarComboPatronesActionPerformed(evt);
            }
        });
        jPanel1.add(cargarComboPatrones, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 720, 150, 40));

        verReporteAminoacidos.setBackground(new java.awt.Color(255, 224, 193));
        verReporteAminoacidos.setColumns(20);
        verReporteAminoacidos.setRows(5);
        jScrollPane6.setViewportView(verReporteAminoacidos);

        jPanel1.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 520, 470, 100));

        jLabel10.setFont(new java.awt.Font("Avenir Next Condensed", 3, 16)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("Reinicio");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 660, 210, 20));

        jLabel11.setFont(new java.awt.Font("Avenir Next Condensed", 1, 15)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Patrón más frecuente");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 350, 470, 20));

        verReporteColision.setBackground(new java.awt.Color(255, 224, 193));
        verReporteColision.setColumns(20);
        verReporteColision.setRows(5);
        jScrollPane7.setViewportView(verReporteColision);

        jPanel1.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 520, 470, 100));

        mostrarPatrones.setBackground(new java.awt.Color(255, 204, 153));
        mostrarPatrones.setFont(new java.awt.Font("Avenir Next", 1, 13)); // NOI18N
        mostrarPatrones.setText("Mostrar información");
        mostrarPatrones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarPatronesActionPerformed(evt);
            }
        });
        jPanel1.add(mostrarPatrones, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 160, 180, -1));

        jSeparator3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 51, 0), 2));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 1070, 500));

        jLabel12.setFont(new java.awt.Font("Avenir", 0, 14)); // NOI18N
        jLabel12.setText("Presione el botón para mostrar todos los patrones encontrados, así como otros datos de interés");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 160, -1, 17));

        jSeparator4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 51, 0), 2));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 680, 720, 130));

        jSeparator5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 51, 0), 2));
        jPanel1.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 680, 320, 130));

        jLabel13.setFont(new java.awt.Font("Avenir Next Condensed", 3, 16)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel13.setText("Búsqueda específica de patrones");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 660, 270, 20));

        jLabel14.setFont(new java.awt.Font("Avenir", 0, 14)); // NOI18N
        jLabel14.setText("Seleccione el patrón de su interés en la lista desplegable y presione el botón de búsqueda ");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 690, -1, 20));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1130, 820));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Acción al presionar el botón "Buscar".
     * Busca la información del patrón seleccionado en el combo box y la muestra.
     */
    private void btnBuscarPatronesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPatronesActionPerformed
        // TODO add your handling code here:
        try{
            if (datosCargados==false) {
                JOptionPane.showMessageDialog(this, "Debe cargar un archivo para visualizar estos datos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
            }
            String patronSeleccionado = (String) cargarComboPatrones.getSelectedItem();
            if (patronSeleccionado != null) {
                NodoArbol nodo = tabla.buscar(patronSeleccionado);
            if (nodo != null) {
                String info = "Patrón: " + nodo.getPatron() + 
                              "\nFrecuencia: " + nodo.getFrecuencias() + 
                              "\nUbicaciones: " + nodo.getPosiciones().mostrarListaPosiciones();
                verInfoPatron.setText(info);
                verInfoPatron.setCaretPosition(0);
            }
            
            
        }
        }catch (Exception e){
            JOptionPane.showMessageDialog(this, "Error al mostrar patrones: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_btnBuscarPatronesActionPerformed

    /**
     * Acción al presionar el botón "Cargar archivo".
     * Permite al usuario seleccionar un archivo de texto y cargar la secuencia de ADN.
     */
    private void cargarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarArchivoActionPerformed
        // TODO add your handling code here:
        try{
            
            if (datosCargados){
                JOptionPane.showMessageDialog(this, "Por favor, presione el botón 'Reiniciar' antes de cargar otro archivo.", "Atención", JOptionPane.WARNING_MESSAGE);
                return;   
            }
            
            JFileChooser archivo = new JFileChooser();
            archivo.setFileFilter(new FileNameExtensionFilter("Archivos de texto (*.txt)", "txt"));

            int result = archivo.showOpenDialog(this);
            
            if (result == JFileChooser.APPROVE_OPTION) {
                File archivoSeleccionado = archivo.getSelectedFile();
      
                if (archivoSeleccionado==null || !archivoSeleccionado.exists()){
                    JOptionPane.showMessageDialog(this, "No seleccionaste ningún archivo.","Error",JOptionPane.ERROR_MESSAGE);
                }else{
                    if (procesador.leerArchivo(archivoSeleccionado)){
                        procesador.construirTabla(tabla);
                        datosCargados=true;
                        DefaultComboBoxModel<String> model = (DefaultComboBoxModel<String>) cargarComboPatrones.getModel();
                        model.removeAllElements();

                        ListaSimple<String> patrones = tabla.obtenerTodosPatronesOrdenados();
                        NodoSimple<String> actual = patrones.getFirst();

                        while (actual != null) {
                            model.addElement(actual.getData());
                            actual = actual.getNext();
                        }
                        
                        JOptionPane.showMessageDialog(this, "Datos cargados con éxito.","Carga de archivo",JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            }
                
        }catch (Exception e){
            JOptionPane.showMessageDialog(this, "Ocurrió un error. Intente de nuevo: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);    
        }
    }//GEN-LAST:event_cargarArchivoActionPerformed

    /**
     * Acción al presionar el botón "Reiniciar".
     * Limpia la interfaz y vuelve a crear todas las estructuras para cargar nuevos datos.
     */
    private void reiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reiniciarActionPerformed
        // TODO add your handling code here:
        tabla=new Hashtable();
        procesador=new ProcesadorArchivo();
        arbol=new ArbolBB();
        datosCargados=false;
        verListaPatrones.setText("");
        verPatronMasFrecuente.setText("");
        verPatronMenosFrecuente.setText("");
        verInfoPatron.setText("");
        verReporteColision.setText("");
        verReporteAminoacidos.setText("");
        cargarComboPatrones.removeAllItems();
    }//GEN-LAST:event_reiniciarActionPerformed

    private void cargarComboPatronesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarComboPatronesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cargarComboPatronesActionPerformed

    /**
     * Acción al presionar el botón "Mostrar información".
     * Llena todos los reportes y áreas de texto de la interfaz con los datos actuales.
     */
    private void mostrarPatronesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarPatronesActionPerformed
        // TODO add your handling code here:
        try{
            
            if (datosCargados==false) {
                JOptionPane.showMessageDialog(this, "Debe cargar un archivo para visualizar estos datos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
            }
            
            if (arbol.esVacio()) {
                procesador.construirArbol(tabla, arbol);
            }
            
            ListaSimple<String> listaPatrones = arbol.inorden();
            verListaPatrones.setText(listaPatrones.mostrarLista());
            verListaPatrones.setCaretPosition(0);
            
            ListaSimple<NodoArbol> patronesMayor = arbol.buscarMayorFrecuencia();
            verPatronMasFrecuente.setText(patronesMayor.mostrarPatronesFrecuencia());
            verPatronMasFrecuente.setCaretPosition(0);

            ListaSimple<NodoArbol> patronesMenor = arbol.buscarMenorFrecuencia();
            verPatronMenosFrecuente.setText(patronesMenor.mostrarPatronesFrecuencia());
            verPatronMenosFrecuente.setCaretPosition(0);
          
            verReporteColision.setText(tabla.reporteColisiones());
            
            ListaSimple<String> reporteAmino = procesador.generarReporteAminoacidos(tabla);
            verReporteAminoacidos.setText(reporteAmino.mostrarLista());
            verReporteAminoacidos.setCaretPosition(0);
            
        }catch (Exception e){
            JOptionPane.showMessageDialog(this, "Error al mostrar patrones: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_mostrarPatronesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarPatrones;
    private javax.swing.JButton cargarArchivo;
    private javax.swing.JComboBox<String> cargarComboPatrones;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JButton mostrarPatrones;
    private javax.swing.JButton reiniciar;
    private javax.swing.JTextArea verInfoPatron;
    private javax.swing.JTextArea verListaPatrones;
    private javax.swing.JTextArea verPatronMasFrecuente;
    private javax.swing.JTextArea verPatronMenosFrecuente;
    private javax.swing.JTextArea verReporteAminoacidos;
    private javax.swing.JTextArea verReporteColision;
    // End of variables declaration//GEN-END:variables
}
